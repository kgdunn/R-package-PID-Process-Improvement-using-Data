library(ggplot2)
install.packages("ggplot2")
help(require)
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))ads
R_HOME
R_HOME/etc/repositoriesads
R.home()
http://R-Forge.R-project.org
help(setRepositories)
getOption("repos")
chooseCRANmirror()
install.packages("FrF2")
setwd("~/Dropbox/Coursera/R-package/v0.1")
library(pid)
help(aes_string)
library(pid)
T <- c(-1, +1, -1, +1)  # centered and scaled temperature
S <- c(-1, -1, +1, +1)  # centered and scaled speed variable
y <- c(69, 60, 64, 53)  # conversion, is our response variable, y
doe.model <- lm(y ~ T + S + T * S)  # create a model with main effects, and interaction
paretoPlot(doe.model)
dir()
library(pid)
T <- c(-1, +1, -1, +1)  # centered and scaled temperature
S <- c(-1, -1, +1, +1)  # centered and scaled speed variable
y <- c(69, 60, 64, 53)  # conversion, is our response variable, y
doe.model <- lm(y ~ T + S + T * S)  # create a model with main effects, and interaction
paretoPlot(doe.model)
data(pollutant)
mod.full <- lm(y ~ C*T*S, data=pollutant)
paretoPlot(mod.full)
library(pid)
library(pid)
library(pid)
help("na.omit")
help(coeff)
help(coef)
help(importFrom)
importFrom
library(pid)
library(pid)
T <- c(-1, +1, -1, +1)  # centered and scaled temperature
S <- c(-1, -1, +1, +1)  # centered and scaled speed variable
y <- c(69, 60, 64, 53)  # conversion, is our response variable, y
doe.model <- lm(y ~ T + S + T * S)  # create a model with main effects, and interaction
paretoPlot(doe.model)
library(pid)
library(pid)
devtools::install_github("jennybc/googlesheets")
install.packages("devtools")
help(devtools)
